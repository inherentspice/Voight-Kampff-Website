import streamlit as st
import requests
import random
import streamlit_modal as modal
import streamlit.components.v1 as components
import datetime

def browser_console_log(msg:str):
    components.html(f'<script>console.log("{msg}")</script>')

IMAGE_PATH = '/Desktop/'
url = "https://vktest-kr575za6oa-uw.a.run.app/response?"
payload_url = "https://vktest-kr575za6oa-uw.a.run.app/question"


# #assign random role to user
# #assign message to user

role=[]
user_info=[]

user_name = ['apple','orange','pear','pie','turkey','burger','sandwich','water','coke','pepsico']
user_room = random.randint(0,len(user_name)-1)
user_id = user_name[user_room]

roles=random.choice(["AI","HUMAN"])
role=roles

st.write(f"'user_room':000{user_room+1}, 'user_id':{user_id},'user_role':{role}")

print('\n'*2,'-'*30)
print(f'My role is: {role}')

#game introduction#
st.title(":video_game: Voight Kampff :video_game:    :robot_face::vs::face_with_rolling_eyes: ")
st.image("https://m.economictimes.com/thumb/msid-66752021,width-1200,height-900,resizemode-4,imgsize-98420/robot-touch.jpg")

start = datetime.datetime.now()
payload_response = requests.get(payload_url).json()
payload = {"question": payload_response.get('question')}
question= str(payload_response.get('question'))
end = datetime.datetime.now()
diff = end - start

print(f'How long does it take to get question: {diff}')

open_modal = st.button("Game Rules")
if open_modal:
    modal.open()
    browser_console_log('Opening the model')

if modal.is_open():
    browser_console_log('model is opened')
    with modal.container():
        browser_console_log('Inside the container')
        st.write("Game Rules")
        # st.image("https://m.economictimes.com/thumb/msid-66752021,width-1200,height-900,resizemode-4,imgsize-98420/robot-touch.jpg")
        st.markdown("""
            ### :performing_arts: Rules: you will be randomly assign :robot_face:AI:vs: :face_with_rolling_eyes: Human role.

            ### :game_die: Players are secretly divided into two teams â€“ humans and :robot_face:androids.

            ### :face_with_rolling_eyes: Humans answer :question: questions and then share them with the group.

            ### :robot_face: Androids are :eye: provided answers generated by a Deep Learning :rocket: model and must convince the group they are human.:performing_arts:

            ### :speech_balloon: Players have time to discuss and vote each other out.Users might all be human. They might all be androids. Each game is random.

            """, unsafe_allow_html=False)
        st.write("#click play if you are ready.")
        value = st.checkbox("Click here to start the game.")
        if value is True:
            modal.close()
        # st.write(f"Checkbox checked: {value}")
# #create user
# # process-1 assign message and role
browser_console_log('Start playing the play button')
start = st.button("Play")
# payload_response = requests.get(payload_url).json()
# payload = {"question": payload_response.get('question')}
browser_console_log(payload_response.get('question'))
# answer = requests.get(url, params=payload).json()
# ai_answer= answer.get('response')
# browser_console_log(ai_answer)

if start and role=="AI":
    with st.spinner("please wait, retrieving the message!"):
        # start = datetime.datetime.now()
        answer = requests.get(url, params=payload).json()
        # end = datetime.datetime.now()
        # diff = end - start
        # print(f'How long does it take to get answer: {diff}')
        ai_answer= answer.get('response')
        # st.balloons()
        # st.success(f"Your role is {role}! Here is the message for you")
    # with st.expander("check message"):
        st.write(ai_answer)
else:
    answerbox = st.text_input(question, 'type here')
    # answerbox = st.text_input(question, value="placeholder information put here", max_chars=None, key=None, type="default", help=None, autocomplete=None, on_change=None, args=None, kwargs=None, placeholder=None)
        # # submit_answer=st.button("submit answer")
        # if submit_answer:
        #     with st.spinner("check"):
    st.write(question)
    st.write(answerbox)
    # st.success("let's fool them")

# #display other user
# #make selection

# st.write(answerbox)

option = st.selectbox( 'what do you think player B is?',('AI', 'Human'))
st.write('You selected:', option)

# #announce the asnwer- picture+userid+roles
reveal= st.button("reveal")
if reveal:
    img_file = st.camera_input("Take a picture")
    # st.write("winner is",img_file)
    with open(IMAGE_PATH, 'rd'):
        pass


#         # answer = requests.get(url, params=payload).json()
#         # ai_answer1 = answer.get('response')
#         # question1 = str(payload_response.get('question'))
#         # givenanswer= ai_answer.rpartition('?')[2]
